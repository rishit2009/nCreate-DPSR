"""empty message

Revision ID: 2510eeb21219
Revises: 
Create Date: 2024-10-20 00:59:22.629657

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2510eeb21219'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('club',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('golds', sa.Integer(), nullable=True),
    sa.Column('silvers', sa.Integer(), nullable=True),
    sa.Column('bronzes', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=True),
    sa.Column('profile_pic', sa.String(length=200), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('forum',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('profile_pic', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('host_id', sa.Integer(), nullable=False),
    sa.Column('registration_end_date', sa.DateTime(), nullable=True),
    sa.Column('prompts_date', sa.DateTime(), nullable=True),
    sa.Column('submission_date', sa.DateTime(), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=True),
    sa.Column('brochure_link', sa.String(length=255), nullable=True),
    sa.Column('profile_pic', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['club.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('golds', sa.Integer(), nullable=True),
    sa.Column('silvers', sa.Integer(), nullable=True),
    sa.Column('bronzes', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('notifications', sa.PickleType(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.Column('profile_pic', sa.String(length=200), nullable=False),
    sa.Column('banner_color', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('forum_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['forum_id'], ['forum.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_clubs',
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], )
    )
    op.create_table('event_users',
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('managers',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('participants_forums',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('forum_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['forum_id'], ['forum.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('requesters',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('sub_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('participant_count', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('event_type', sa.Enum('online', 'offline', 'hybrid', name='event_type_enum'), nullable=False),
    sa.Column('is_submission_based', sa.Boolean(), nullable=False),
    sa.Column('first_place_club_id', sa.Integer(), nullable=True),
    sa.Column('second_place_club_id', sa.Integer(), nullable=True),
    sa.Column('third_place_club_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['first_place_club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['second_place_club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['third_place_club_id'], ['club.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_skills',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.create_table('sub_event_club_registrations',
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.Column('sub_event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['sub_event_id'], ['sub_event.id'], )
    )
    op.create_table('sub_event_registrations',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('sub_event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sub_event_id'], ['sub_event.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('club_id', sa.Integer(), nullable=False),
    sa.Column('sub_event_id', sa.Integer(), nullable=False),
    sa.Column('submission_link', sa.String(length=255), nullable=False),
    sa.Column('submission_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['sub_event_id'], ['sub_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_sub_event_positions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sub_event_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sub_event_id'], ['sub_event.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'sub_event_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_sub_event_positions')
    op.drop_table('submission')
    op.drop_table('sub_event_registrations')
    op.drop_table('sub_event_club_registrations')
    op.drop_table('user_skills')
    op.drop_table('sub_event')
    op.drop_table('requesters')
    op.drop_table('participants_forums')
    op.drop_table('managers')
    op.drop_table('event_users')
    op.drop_table('event_clubs')
    op.drop_table('comment')
    op.drop_table('user')
    op.drop_table('event')
    op.drop_table('skill')
    op.drop_table('forum')
    op.drop_table('club')
    # ### end Alembic commands ###
